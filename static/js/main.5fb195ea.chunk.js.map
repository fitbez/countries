{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","countries","setCountries","searchedCountry","setSearchedCountry","countryToShow","filter","country","name","toUpperCase","indexOf","console","log","useEffect","axios","get","then","response","data","className","type","onChange","e","target","value","length","map","flag","population","region","src","style","width","alt","countrySearch","onClick","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4OAqFeA,MAjFf,WACE,MAAkCC,mBAAS,IAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAA8CF,mBAAS,IAAvD,mBAAOG,EAAP,KAAwBC,EAAxB,KAWMC,EAAgBJ,EAAUK,QAAO,SAACC,GACtC,OACEA,EAAQC,KAAKC,cAAcC,QAAQP,EAAgBM,gBAAkB,KA8BzE,OA1BAE,QAAQC,IAAIP,GAEZQ,qBAAU,WACRC,IAAMC,IAAI,oCAAoCC,MAAK,SAACC,GAElDf,EAAae,EAASC,WAEvB,IAoBD,sBAAKC,UAAU,MAAf,UACE,wDACA,kEACA,uBAAOC,KAAK,OAAOC,SArBF,SAACC,GAEpBlB,EAAmBkB,EAAEC,OAAOC,UAoBzBnB,EAAcoB,QAAU,IACvB,wEACEpB,EAAcoB,QAAU,GAC1B,yEAC2B,IAAzBpB,EAAcoB,OAChBpB,EAAcqB,KAAI,SAACnB,GACjB,IAAQoB,EAAmCpB,EAAnCoB,KAAMnB,EAA6BD,EAA7BC,KAAMoB,EAAuBrB,EAAvBqB,WAAYC,EAAWtB,EAAXsB,OAChC,OACE,gCACE,qBAAKC,IAAKH,EAAMI,MAAO,CAAEC,MAAO,SAAWC,IAAI,cAC/C,uCAAUzB,EAAV,OACA,6CAAgBoB,KAChB,yCAAYC,EAAZ,SAJQrB,MASd,8BACGH,EAAcqB,KAAI,SAACQ,GAClB,OACE,qBAAKC,QAAS,kBAAM/B,EAAmB8B,EAAc1B,OAArD,SACG0B,EAAc1B,gBC/DhB4B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBtB,MAAK,YAAkD,IAA/CuB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.5fb195ea.chunk.js","sourcesContent":["import { React, useEffect, useState } from \"react\";\r\nimport \"./App.css\";\r\nimport axios from \"axios\";\r\n\r\nfunction App() {\r\n  const [countries, setCountries] = useState([]);\r\n  const [searchedCountry, setSearchedCountry] = useState(\"\");\r\n  // const fetchData = async () => {\r\n  //   const response = await fetch(\"https://restcountries.com/v2/all\");\r\n  //   const newData = await response.json();\r\n  //   // console.log(newData);\r\n  //   setCountries(newData);\r\n  // };\r\n\r\n  // const num = [2, 4, 5, 9];\r\n  // console.log(num.indexOf(2));\r\n\r\n  const countryToShow = countries.filter((country) => {\r\n    return (\r\n      country.name.toUpperCase().indexOf(searchedCountry.toUpperCase()) > -1\r\n    );\r\n  });\r\n\r\n  console.log(countryToShow);\r\n\r\n  useEffect(() => {\r\n    axios.get(\"https://restcountries.com/v2/all\").then((response) => {\r\n      // console.log(response.data);\r\n      setCountries(response.data);\r\n    });\r\n  }, []);\r\n\r\n  const handleSearch = (e) => {\r\n    // console.log(e.target.value);\r\n    setSearchedCountry(e.target.value);\r\n  };\r\n\r\n  // console.log(countries);\r\n  // console.log(searchedCountry);\r\n  // const obj = {\r\n  //   nameOne: \"Elisabet\",\r\n  //   nameTwo: \"Martha\",\r\n  // };\r\n\r\n  // console.log(obj.nameOne);\r\n\r\n  // const firstTenCountries = countries.slice(0, 10);\r\n  // console.log(firstTenCountries);\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <h2>Welcome from countries</h2>\r\n      <label>Search for a country by name </label>\r\n      <input type=\"text\" onChange={handleSearch} />\r\n      {countryToShow.length >= 250 ? (\r\n        <p>Please enter a country to know about...</p>\r\n      ) : countryToShow.length >= 20 ? (\r\n        <p>Too many matches, specify another filter</p>\r\n      ) : countryToShow.length === 1 ? (\r\n        countryToShow.map((country) => {\r\n          const { flag, name, population, region } = country;\r\n          return (\r\n            <div key={name}>\r\n              <img src={flag} style={{ width: \"100px\" }} alt=\"countries\" />\r\n              <p>Name: {name} </p>\r\n              <p>Population: {population}</p>\r\n              <p>Region: {region} </p>\r\n            </div>\r\n          );\r\n        })\r\n      ) : (\r\n        <div>\r\n          {countryToShow.map((countrySearch) => {\r\n            return (\r\n              <div onClick={() => setSearchedCountry(countrySearch.name)}>\r\n                {countrySearch.name}\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}